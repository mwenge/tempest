.TITLE ALHARD - ALIENS IRQ HANDLER
	.SBTTL ******************************************
	.SBTTL *					*
	.SBTTL *MODULE:		ALHARD			*
	.SBTTL *PROGRAMMER:	DAVE THEURER		*
	.SBTTL *FUNCTION:	ALIENS IRQ HANDLER	*
	.SBTTL *					*
	.SBTTL ******************************************
	.NLIST

	.INCLUDE ALCOMN
	.LIST
	.PAGE
	.SBTTL GLOBALS
	.GLOBL MAINLN,RESET
	.GLOBL MODSND,MOOLAH,QCHKSA
QCHKS0	==02A
QCHKS1	==069
QCHKS2	==04D
QCHKS3	==016
QCHKS4	==0AB
QCHKS5	==0B2
QCHKS6	==01E
QCHKS7	==03E
QCHKS8	==0DB
QCHKS9	==000
QCHKSA	==07C
QCHKSB	==0EE
	.PAGE
	.SBTTL IRQ-ENTRY

	.CSECT
CHKSMA::	.BYTE QCHKSA
;FUNCTION:	VERIFY STACK POINTER, PC AND SOFTWARE WATCHDOG
;		RESET IF NECESSARY
;		SWITCH DISPLAY BUFFER POINTER AND BUILD BUFFER POINTERS WHEN TIME

IRQ:
	PHA			;SAVE ACC,X,Y
	TXA
	PHA
	TYA
	PHA
	CLD			;SET HEX
	TSX
	CPX I,0D0
	IFCS			;STACK TOO DEEP?
	LDA FRTIMR
	BPL SOFTOK		;OVERRUN TIME LIMIT (BR IF OK)
	ENDIF			;FALL INTO RESET ROUTINE
	BRK
	JMP RESET
	.PAGE
	.SBTTL IRQ-PROCESSING

SOFTOK:	STA WTCHDG		;KICK DOG

	.PAGE
	.SBTTL SWITCHES



	STA POTGO		;READ POT
	LDA ALLPOT
	EOR I,0F
	TAY
	AND I,COCKTA
	STA COCTAL
	TYA
	SEC
	SBC OTB
	AND I,0F
	CMP I,8
	IFCS
	ORA I,0F0
	ENDIF
	CLC
	ADC TBHD
	STA TBHD
	STY OTB
	STA A,POTGO2		;KICK POKEY
	LDY ALLPO2
				;READ POKEY SWITCHES
	LDA A,IN1
	STA $COINA		;READ COIN, SLAM, TEST SWITCHES
				;DEBOUNCE SWITCHES (1 BIT/SWITCH):
				;CONSIDERING EACH BIT INDIVIDUALLY,
				;  IF INPUT+DBSW+SWSTAT IS
				;    0 OR 1, NEW SWSTAT=0
				;    2 OR 3, NEW SWSTAT=1
	LDA DBSW
	STY DBSW
	TAY
	AND DBSW		;((INPUT AND DBSW) OR SWSTAT)
	ORA SWSTAT
	STA SWSTAT
	TYA			;	    AND
	ORA DBSW		;     (DBSW OR INPUT)
	AND SWSTAT
	STA SWSTAT		;SAVE RESULT HERE (0=ON, 1=OFF)
	TAY
	EOR SWRELE		;MUST RELEASE PROCESS
	AND SWSTAT
	ORA SWFINA		;LATCH ON
	STA SWFINA
	STY SWRELE
	.PAGE
	.SBTTL	OUTPUTS
	LDA TOUT0
	LDY $CCTIM
	IFMI			;COIN COUNTERS
	ORA I,MLCCNT
	ENDIF
	LDY $CCTIM+1
	IFMI
	ORA I,MMCCNT
	ENDIF
	LDY $CCTIM+2
	IFMI
	ORA I,MRCCNT
	ENDIF
	STA OUT0
				;
				;DO START LIGHTS
				;
	LDX NUMPLA		;INDEX FOR LIGHTS ON BIT IF IN GAME
	INX
	LDY QSTATUS
	IFEQ			;ATTRACT MODE?
	LDX I,0			;YES. OFF
	LDY $INTCT
	CPY I,40
	IFCS			;BLINK ON TIME?
	LDX $$CRDT		;YES.
	CPX I,2
	IFCS
	LDX I,3
	ENDIF
	ENDIF
	ENDIF
	LDA X,LITSON
	EOR TNKOUT
	AND I,MLED1!MLED2
	EOR TNKOUT
	STA TNKOUT
	STA OUTANK
	JSR MOOLAH		;PROCESS COINS
	JSR MODSND		;PROCESS SOUNDS
	INC FRTIMR		;UPDATE FRAME TIMER
	INC $INTCT		;INTERRUPT COUNTER
	IFEQ			;ANOTHER SECOND?
	INC SECOUL		;YES. UPDATE UP TIMER
	IFEQ
	INC SECOUM
	IFEQ
	INC SECOUH
	ENDIF
	ENDIF
	BIT QSTATUS
	IFVS			;GAME TIMER MODE?
	INC SECOPL		;YES. UPDATE PLAY TIMER
	IFEQ
	INC SECOPM
	IFEQ
	INC SECOPH
	ENDIF
	ENDIF
	ENDIF
	ENDIF
	BIT IN1
	IFVS			;VG DONE (HALTED)?
	INC SPARE3			;SET STOPPED FLAG
	STA VGSTOP
	STA VGSTART
	ENDIF
	PLA			;RESTORE Y,X,ACC
	TAY
	PLA
	TAX
	PLA
	RTI

LITSON:	.BYTE 0FF,^CMLED1,^CMLED2,^C<MLED1!MLED2>
	.VCTRS 0DFFA,IRQ,RESET,IRQ
	HLL65
	.END
